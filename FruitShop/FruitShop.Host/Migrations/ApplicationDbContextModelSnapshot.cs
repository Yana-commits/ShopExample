// <auto-generated />
using FruitShop.Host.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FruitShop.Host.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("fruit_item_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("fruit_sort_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("fruit_type_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("provider_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("FruitShop.Host.Data.Entities.FruitItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "fruit_item_hilo");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("FruitSortId")
                        .HasColumnType("integer");

                    b.Property<int>("FruitTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProviderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FruitSortId");

                    b.HasIndex("FruitTypeId");

                    b.HasIndex("ProviderId");

                    b.ToTable("FruitItems", (string)null);
                });

            modelBuilder.Entity("FruitShop.Host.Data.Entities.FruitSortEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "fruit_sort_hilo");

                    b.Property<string>("Sort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("FruitSorts", (string)null);
                });

            modelBuilder.Entity("FruitShop.Host.Data.Entities.FruitTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "fruit_type_hilo");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("FruitTypes", (string)null);
                });

            modelBuilder.Entity("FruitShop.Host.Data.Entities.ProviderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "provider_hilo");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Providers", (string)null);
                });

            modelBuilder.Entity("FruitShop.Host.Data.Entities.FruitItemEntity", b =>
                {
                    b.HasOne("FruitShop.Host.Data.Entities.FruitSortEntity", "FruitSort")
                        .WithMany()
                        .HasForeignKey("FruitSortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FruitShop.Host.Data.Entities.FruitTypeEntity", "FruitType")
                        .WithMany()
                        .HasForeignKey("FruitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FruitShop.Host.Data.Entities.ProviderEntity", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FruitSort");

                    b.Navigation("FruitType");

                    b.Navigation("Provider");
                });
#pragma warning restore 612, 618
        }
    }
}
